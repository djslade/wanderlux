// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  finishedOnboarding Boolean             @default(false)
  updated            DateTime            @updatedAt
  created            DateTime            @default(now())
  loginData          LoginData?
  externalLoginData  ExternalLoginData[]
  profile            Profile?
  refreshTokens      RefreshToken[]
}

model LoginData {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  email          String   @unique
  emailVerified  Boolean  @default(false)
  hashedPassword String
  updated        DateTime @updatedAt
  created        DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])
}

model ExternalLoginData {
  id            Int      @id @default(autoincrement())
  userId        Int
  email         String?
  providerName  String
  providerToken String
  updated       DateTime @updatedAt
  created       DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
}

model Profile {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  username    String   @unique
  displayName String
  avatarUrl   String
  updated     DateTime @updatedAt
  created     DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id      String   @id @default(uuid())
  userId  Int
  expires DateTime
  updated DateTime @updatedAt
  created DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id])
}
